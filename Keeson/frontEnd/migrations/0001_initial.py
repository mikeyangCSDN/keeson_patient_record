# Generated by Django 2.0.5 on 2018-06-05 06:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BB_Ronghua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=64, verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='检验分类')),
                ('result', models.CharField(blank=True, max_length=255, null=True, verbose_name='检验结果')),
                ('date', models.DateField(blank=True, null=True, verbose_name='检验时间')),
            ],
            options={
                'verbose_name_plural': '荣华婴儿表(ronghua_baby)',
                'db_table': 'ronghua_baby',
            },
        ),
        migrations.CreateModel(
            name='DM_Ronghua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=64, verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('gender', models.CharField(blank=True, choices=[('M', '男性'), ('F', '女性')], max_length=64, null=True, verbose_name='性别')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='年龄')),
                ('height', models.IntegerField(blank=True, help_text='(cm)', null=True, verbose_name='身高')),
                ('weight', models.FloatField(blank=True, help_text='(kg)', null=True, verbose_name='体重')),
                ('in_date', models.DateTimeField(blank=True, null=True, verbose_name='入院日期')),
                ('out_date', models.DateTimeField(blank=True, null=True, verbose_name='出院日期')),
                ('in_diagnose', models.CharField(blank=True, max_length=255, null=True, verbose_name='入院诊断')),
            ],
            options={
                'verbose_name_plural': '荣华客户基本信息(ronghua_demographic)',
                'db_table': 'ronghua_demographic',
            },
        ),
        migrations.CreateModel(
            name='EX_Ronghua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=64, verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('dose', models.CharField(blank=True, max_length=64, null=True, verbose_name='每次用药剂量')),
                ('unit', models.CharField(blank=True, max_length=64, null=True, verbose_name='剂量单位')),
                ('doctor_advice', models.CharField(blank=True, max_length=255, null=True, verbose_name='医嘱类型')),
                ('date', models.DateField(blank=True, null=True, verbose_name='给药日期')),
            ],
            options={
                'verbose_name_plural': '荣华用药记录(ronghua_exposure)',
                'db_table': 'ronghua_exposure',
            },
        ),
        migrations.CreateModel(
            name='NU_Ronghua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=64, verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='护理分类')),
                ('result', models.CharField(blank=True, max_length=255, null=True, verbose_name='护理结果')),
                ('date', models.DateField(blank=True, null=True, verbose_name='护理时间')),
            ],
            options={
                'verbose_name_plural': '荣华护理记录(ronghua_nursing)',
                'db_table': 'ronghua_nursing',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('gender', models.CharField(blank=True, choices=[('M', '男性'), ('F', '女性')], max_length=64, null=True, verbose_name='性别')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='年龄')),
                ('height', models.IntegerField(blank=True, help_text='(cm)', null=True, verbose_name='身高')),
                ('weight', models.FloatField(blank=True, help_text='(kg)', null=True, verbose_name='体重')),
                ('in_date', models.DateTimeField(blank=True, null=True, verbose_name='入院日期')),
                ('out_date', models.DateTimeField(blank=True, null=True, verbose_name='出院日期')),
            ],
            options={
                'verbose_name_plural': '病人基本信息(yiyuan_demographic)',
                'db_table': 'yiyuan_demographic',
            },
        ),
        migrations.CreateModel(
            name='PatientBed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_ID', models.IntegerField(verbose_name='床编号')),
                ('device_id', models.CharField(max_length=64, verbose_name='设备号')),
                ('date', models.DateTimeField(verbose_name='时间')),
            ],
            options={
                'verbose_name_plural': '病床(yiyuan_bed)',
                'db_table': 'yiyuan_beds',
            },
        ),
        migrations.CreateModel(
            name='PatientEX',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('dose', models.CharField(max_length=64, verbose_name='每次用药剂量')),
                ('date', models.DateField(blank=True, null=True, verbose_name='给药日期')),
            ],
            options={
                'verbose_name_plural': '病人用药记录(yiyuan_exposure)',
                'db_table': 'yiyuan_exposure',
            },
        ),
        migrations.CreateModel(
            name='PatientLB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('date', models.DateField(blank=True, null=True, verbose_name='检验时间')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='检验分类')),
                ('subcategory', models.CharField(blank=True, max_length=64, null=True, verbose_name='检验子分类')),
                ('exam_program', models.CharField(blank=True, max_length=64, null=True, verbose_name='检验项目')),
                ('result', models.CharField(blank=True, max_length=255, null=True, verbose_name='检验结果')),
            ],
            options={
                'verbose_name_plural': '病人化验放射检验报告(yiyuan_laboratory)',
                'db_table': 'yiyuan_laboratory',
            },
        ),
        migrations.CreateModel(
            name='PatientMH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('inquiry_date', models.DateField(blank=True, null=True, verbose_name='问诊时间')),
                ('past_history', models.CharField(blank=True, max_length=255, null=True, verbose_name='既往史')),
                ('personal_history', models.CharField(blank=True, max_length=255, null=True, verbose_name='个人史')),
                ('family_history', models.CharField(blank=True, max_length=255, null=True, verbose_name='家族史')),
                ('in_symptom', models.CharField(blank=True, max_length=255, null=True, verbose_name='现病史（入院病症）')),
                ('out_symptom', models.CharField(blank=True, max_length=255, null=True, verbose_name='现病史（出院病症）')),
            ],
            options={
                'verbose_name_plural': '病人病史(yiyuan_med_history)',
                'db_table': 'yiyuan_med_history',
            },
        ),
        migrations.CreateModel(
            name='PatientPE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('category', models.CharField(max_length=64, verbose_name='体格检查名称')),
                ('result', models.CharField(max_length=255, verbose_name='体格检查结果')),
                ('date', models.DateField(verbose_name='体格检查日期')),
            ],
            options={
                'verbose_name_plural': '病人体格检验(yiyuan_physical_examination)',
                'db_table': 'yiyuan_physical_examination',
            },
        ),
        migrations.CreateModel(
            name='PatientPR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('is_operated', models.BooleanField(verbose_name='是否手术')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='手术类别')),
                ('date', models.DateField(blank=True, null=True, verbose_name='手术时间')),
            ],
            options={
                'verbose_name_plural': '病人手术状况(yiyuan_operation)',
                'db_table': 'yiyuan_operation',
            },
        ),
        migrations.CreateModel(
            name='PatientTE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField(verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('exam_program', models.CharField(blank=True, max_length=64, null=True, verbose_name='每日检查项目')),
                ('result', models.CharField(blank=True, max_length=255, null=True, verbose_name='检查结果')),
                ('date', models.DateField(blank=True, null=True, verbose_name='问诊时间')),
                ('all_result', models.CharField(blank=True, max_length=255, null=True, verbose_name='总问诊结果')),
            ],
            options={
                'verbose_name_plural': '病人每日问诊(yiyuan_trial_element)',
                'db_table': 'yiyuan_trial_element',
            },
        ),
        migrations.CreateModel(
            name='PE_Ronghua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=64, verbose_name='床号')),
                ('subject_id', models.IntegerField(verbose_name='病号')),
                ('is_operated', models.BooleanField(verbose_name='是否手术')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='检验分类')),
                ('result', models.CharField(blank=True, max_length=255, null=True, verbose_name='检验结果')),
                ('date', models.DateField(blank=True, null=True, verbose_name='检验时间')),
            ],
            options={
                'verbose_name_plural': '荣华体检表(ronghua_physical_examination)',
                'db_table': 'ronghua_physical_examination',
            },
        ),
        migrations.AlterUniqueTogether(
            name='patient',
            unique_together={('bed_number', 'subject_id')},
        ),
        migrations.AlterUniqueTogether(
            name='dm_ronghua',
            unique_together={('bed_number', 'subject_id')},
        ),
    ]
